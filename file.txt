10
67200
5 10000 
4 6700  
7 8000  
6 9500  
8 12000 
7 10000 
8 8700  
9 8500 
6 7000  
9 9000 


package com.example.ahnaf.myapplication2;
import javax.swing.*;
import java.util.*;
public class knapsack {

        public static void main(String[] args) {
            int N = Integer.parseInt(args[0]);   // number of items
            int W = Integer.parseInt(args[1]);

            int[] profit = new int[N+1];
            int[] weight = new int[N+1];


            for (int n = 1; n <= N; n++) {
                profit[n] = StdRandom.uniform(1000);
                weight[n] = StdRandom.uniform(W);
            }


            int[][] opt = new int[N+1][W+1];
            boolean[][] sol = new boolean[N+1][W+1];

            for (int n = 1; n <= N; n++) {
                for (int w = 1; w <= W; w++) {


                    int option1 = opt[n-1][w];


                    int option2 = Integer.MIN_VALUE;
                    if (weight[n] <= w) option2 = profit[n] + opt[n-1][w-weight[n]];


                    opt[n][w] = Math.max(option1, option2);
                    sol[n][w] = (option2 > option1);
                }
            }


            boolean[] take = new boolean[N+1];
            for (int n = N, w = W; n > 0; n--) {
                if (sol[n][w]) {
                    take[n] = true;
                    w = w - weight[n];
                }
                else {
                    take[n] = false;
                }
            }


            StdOut.println("item" + "\t" + "profit" + "\t" + "weight" + "\t" + "take");
            for (int n = 1; n <= N; n++) {
                StdOut.println(n + "\t" + profit[n] + "\t" + weight[n] + "\t" + take[n]);
            }
        }
    }
}
